{"version":3,"sources":["redux/reducers/app.js","redux/reducers/ui.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","libs/Palette.js","components/GlobeHome.jsx","redux/actions.js","components/handlers/mesh.js","components/handlers/utils.js","components/GlobeAR.jsx","components/Button.jsx","components/Logo.jsx","components/Loading.jsx","components/Biome.jsx","components/InfoOverlay.jsx","components/SectionControls.jsx","components/Interface.jsx","components/Renderer.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["initialState","camera","biome","message","globePlaced","section","helpDisplayed","info","hide","picture","hideHotspots","combineReducers","app","state","action","type","payload","degrees","ui","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Palette","background","bgHaze","deepBlue","blue","aqua","green","lightGreen","sand","fact","core","innerCore","mantle","upperMantle","innerCoreDarker","mantleDarker","upperMantleDarker","PlaneBufferGeometry","prototype","toGrid","segmentsX","this","parameters","widthSegments","segmentsY","heightSegments","indices","i","index11","index12","j","index21","index22","push","setIndex","GlobeHome","renderer","scene","earth","globe","Group","el","React","createRef","props","cameraTarget","xrEnabled","Scene","fog","Fog","pixelRatio","devicePixelRatio","WebGLRenderer","antialias","setClearColor","setSize","innerWidth","innerHeight","setPixelRatio","current","appendChild","domElement","document","body","VRButton","createButton","xr","enabled","shadowMap","PerspectiveCamera","position","x","z","lookAt","Vector3","ambientLight","AmbientLight","add","sunlight","DirectionalLight","set","castShadow","plane","LineSegments","MeshBasicMaterial","color","opacity","transparent","y","rotateX","MathUtils","degToRad","speed","isMobile","setAnimationLoop","t","time","material","Math","cos","rotateY","render","addEventListener","aspect","updateProjectionMatrix","prevProps","globePrev","params","scale","TweenAutoplay","Tween","to","easing","Easing","Quadratic","Out","on","delay","start","remove","id","ref","Component","toggleInfo","toggleSection","closeBiome","resetGlobe","textureLoader","TextureLoader","textures","load","process","sprites","MeshHandler","createCore","Mesh","SphereBufferGeometry","name","createSectionMesh","inner","RingBufferGeometry","side","DoubleSide","map","crust","hotspotGeometry","coords","radMin","radMax","spriteTexture","lat","lon","component","hotspot","setPosition","object","radius","latRad","PI","lonRad","sin","rotation","pointCoord","surfaceOrb","points","line","Line","BufferGeometry","setFromPoints","LineBasicMaterial","animator","PlainAnimator","texture","init","sprite","Sprite","SpriteMaterial","userData","Utils","setOpacity","obj","traverse","child","cloneMaterials","clone","animateOpacity","from","o","prop","visible","animateScale","ease","Elastic","shrub","multiplier","random","variance","forward","chainedTweens","COORDS","INNER_COORDS","distance","Canvas","styled","canvas","GlobeAR","Camera","controller","listener","audioInteraction","audioBg","fakeEarth","biomes","group","hotspots","innerHotspots","clock","Clock","animations","surface","controls","image","statePlace","rotating","screenshot","mixer","raycaster","Raycaster","tapPosition","Vector2","vec3","tempMatrix","Matrix4","helpTimeout","theta","hitTestSource","hitTestSourceRequested","clipPlanes","Plane","planeNormal","planePoint","axis","sectionRotation","saved","touches","vector","attachHandlers","hammer","Hammer","e","store","ReactGA","event","category","label","spawnEarth","displayHelp","closeMessage","placeGlobe","center","setFromCamera","xrCamera","intersects","intersectObjects","children","length","parent","selectBiome","isPlaying","stop","toLowerCase","rotations","audioBuffers","forEach","test","setBuffer","play","reset","get","enable","threshold","velocityX","velocityY","deltaX","deltaY","srcEvent","movementX","movementY","delta","deltaRotationQuaternion","Quaternion","setFromEuler","Euler","quaternion","multiplyQuaternions","effective","final","earthSectionLeft","earthSectionRight","index","messages","setTimeout","setMessage","setHelpDisplayed","gX","gZ","setFromMatrixPosition","matrix","matrixAutoUpdate","ring","updateSections","d","min","max","planeLeft","planeRight","normalLeft","normalRight","pointLeft","pointRight","applyQuaternion","copy","setFromNormalAndCoplanarPoint","globePipelineModule","alpha","localClippingEnabled","session","setReferenceSpaceType","setSession","getCamera","AudioListener","Audio","PlaneGeometry","receiveShadow","PointLight","coord","placeObjectOnPlanet","placeObjectInsidePlanet","width","height","frame","getDelta","update","updateGlobe","hot","animate","TweenUpdate","referenceSpace","getReferenceSpace","currentSession","getSession","requestReferenceSpace","then","requestHitTestSource","space","source","hitTestResults","getHitTestResults","getPose","transform","fromArray","pageview","node","n","isMesh","earthCore","prevUi","prevApp","clearTimeout","scales","bgAudio","setLoop","takeScreenshot","clippingPlanes","clipIntersection","FrontSide","connect","Button","onClick","icon","square","big","text","disabled","Size","BaseButton","FullButton","UIButton","div","button","ComponentMap","FaInfo","back","FaCaretLeft","FaCaretDown","FaCamera","close","FaTimes","FaGlobe","help","FaQuestion","FaCaretRight","unknown","IoIosWarning","spinner","AiOutlineLoading3Quarters","tap","FaRegHandPointUp","move","IoMdMove","pinch","FaCompressArrowsAlt","IconComponent","className","Image","img","Inline","Logo","inline","src","alt","baseStyles","TopContainer","MiddleContainer","BottomContainer","LogoContainer","Loading","onClickPlay","compatible","rel","target","href","Container","Slider","MainTitle","h1","MainDescription","h4","List","BIOMES","Ocean","interactive","title","subtitle","description","facts","TropicalRainforest","TemperateRainforest","Freshwater","Chaparral","InnerCore","OuterCore","Mantle","Crust","Biome","show","toggleShow","setState","b","key","dangerouslySetInnerHTML","__html","legend","item","StyledSlider","ReactSlider","StyledThumb","StyledTrack","Thumb","valueNow","toFixed","Track","updateSection","defaultValue","ariaLabel","renderTrack","renderThumb","onChange","value","BottomFade","STRINGS","CAMERA_ACCESS_REQUIRED","CAMERA_ACCESS_DENIED","SCAN_FLOOR","PLACE_GLOBE","INSTRUCTIONS_SWIPE","INSTRUCTIONS_PINCH","INSTRUCTIONS_TAP","INSTRUCTIONS_ICON","toggleCamera","CSSTransition","in","classNames","timeout","unmountOnExit","appear","Home","loading","model","playing","startExperience","options","requiredFeatures","domOverlay","root","querySelector","navigator","requestSession","location","pathname","search","setCompatibilityAndLoad","loader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","preload","setDRACOLoader","files","audios","globeglb","nonInteractive","temperaterainforest","freshwater","tropicalrainforest","chaparral","Object","keys","xS","yS","zS","JSON","parse","stringify","xR","yR","zR","audioLoader","AudioLoader","file","buffer","err","console","warn","notCompatible","onload","isSessionSupported","supported","catch","initialize","Boolean","hostname","match","rootElement","getElementById","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2af7d891.chunk.js","sourcesContent":["import {\n  SELECT_BIOME,\n  CLOSE_BIOME,\n  SET_MESSAGE,\n  PLACE_GLOBE,\n  RESET_GLOBE,\n  UPDATE_SECTION,\n  HELP_DISPLAYED,\n} from '../actionTypes';\n\nconst initialState = {\n  camera: false,\n  biome: false,\n  message: 'PLACE_GLOBE',\n  globePlaced: false,\n  section: 120,\n  helpDisplayed: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SELECT_BIOME: {\n      const { biome } = action.payload;\n\n      return {\n        ...state,\n        biome,\n      };\n    }\n\n    case CLOSE_BIOME: {\n      return {\n        ...state,\n      };\n    }\n\n    case SET_MESSAGE: {\n      const { message } = action.payload;\n\n      return {\n        ...state,\n        message,\n      };\n    }\n\n    case PLACE_GLOBE: {\n      return {\n        ...state,\n        globePlaced: true,\n      };\n    }\n\n    case RESET_GLOBE: {\n      return {\n        ...state,\n        globePlaced: false,\n        message: 'PLACE_GLOBE',\n      };\n    }\n\n    case UPDATE_SECTION: {\n      const { degrees } = action.payload;\n\n      return {\n        ...state,\n        section: degrees,\n      };\n    }\n\n\n    case HELP_DISPLAYED: {\n      return {\n        ...state,\n        helpDisplayed: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import {\n  TOGGLE_INFO,\n  TOGGLE_CAMERA,\n  TOGGLE_SECTION,\n  SET_MESSAGE,\n  CLOSE_MESSAGE,\n  PLACE_GLOBE,\n  RESET_GLOBE,\n  SELECT_BIOME,\n  CLOSE_BIOME,\n  TAKE_PICTURE,\n} from '../actionTypes';\n\nconst initialState = {\n  info: false,\n  camera: false,\n  hide: true,\n  biome: false,\n  message: true,\n  picture: false,\n  hideHotspots: false,\n  section: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_INFO: {\n      return {\n        ...state,\n        info: !state.info,\n        hide: !state.info,\n      };\n    }\n\n    case TOGGLE_CAMERA: {\n      return {\n        ...state,\n        camera: !state.camera,\n        hide: !state.camera,\n        picture: false,\n      };\n    }\n\n    case TOGGLE_SECTION: {\n      return {\n        ...state,\n        section: !state.section,\n        info: false,\n        hide: !state.section,\n        hideHotspots: !state.section,\n      };\n    }\n\n\n    case SET_MESSAGE: {\n      return {\n        ...state,\n        message: true,\n        hide: true,\n      };\n    }\n\n    case CLOSE_MESSAGE: {\n      const { hide = false } = action.payload;\n      return {\n        ...state,\n        message: false,\n        hide,\n      };\n    }\n\n    case PLACE_GLOBE: {\n      return {\n        ...state,\n      };\n    }\n\n    case RESET_GLOBE: {\n      return {\n        ...state,\n        message: true,\n        hide: true,\n      };\n    }\n\n    case SELECT_BIOME: {\n      if (state.biome === true) {\n        return state;\n      }\n\n      return {\n        ...state,\n        biome: true,\n        camera: false,\n        hide: true,\n        hideHotspots: true,\n      };\n    }\n\n    case CLOSE_BIOME: {\n      return {\n        ...state,\n        biome: false,\n        camera: false,\n        hide: state.section, // remains hidden if we're in section mode\n        hideHotspots: state.section, // remains hidden if we're in section mode\n      };\n    }\n\n    case TAKE_PICTURE: {\n      return {\n        ...state,\n        picture: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport appReducers from './app';\nimport uiReducers from './ui';\n\nexport default combineReducers({\n  app: appReducers,\n  ui: uiReducers,\n});\n","export const TOGGLE_INFO = 'TOGGLE_INFO';\nexport const TOGGLE_CAMERA = 'TOGGLE_CAMERA';\nexport const TOGGLE_SECTION = 'TOGGLE_SECTION';\nexport const SELECT_BIOME = 'SELECT_BIOME';\nexport const CLOSE_BIOME = 'CLOSE_BIOME';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLOSE_MESSAGE = 'CLOSE_MESSAGE';\nexport const PLACE_GLOBE = 'PLACE_GLOBE';\nexport const RESET_GLOBE = 'RESET_GLOBE';\nexport const TAKE_PICTURE = 'TAKE_PICTURE';\nexport const UPDATE_SECTION = 'UPDATE_SECTION';\nexport const HELP_DISPLAYED = 'HELP_DISPLAYED';\n","/* eslint-disable no-underscore-dangle */\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n","const Palette = {\n  background: 0x020911,\n  bgHaze: 0x05182c,\n  deepBlue: 0x115195,\n  blue: 0x2573b4,\n  aqua: 0x2699a2,\n  green: 0x4bb29e,\n  lightGreen: 0xb0d893,\n  sand: 0xddd3c6,\n  fact: 0x4bd944,\n  core: 0xece5cc,\n  innerCore: 0xe2c156,\n  mantle: 0xc22e0f,\n  upperMantle: 0xb09862,\n  innerCoreDarker: 0xb2a126,\n  mantleDarker: 0x920000,\n  upperMantleDarker: 0x906832,\n};\n\nexport default Palette;\n","import React, { Component } from 'react';\nimport {\n  Vector3,\n  Scene,\n  PerspectiveCamera,\n  WebGLRenderer,\n  LineSegments,\n  AmbientLight,\n  DirectionalLight,\n  PlaneBufferGeometry,\n  MeshBasicMaterial,\n  MathUtils,\n  Fog,\n  Group,\n} from 'three';\n\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton';\nimport { isMobile } from 'react-device-detect';\n\nimport {\n  autoPlay as TweenAutoplay,\n  Easing,\n  Tween,\n} from 'es6-tween';\n\nimport Palette from '../libs/Palette';\n\nPlaneBufferGeometry.prototype.toGrid = function toGrid() {\n  const segmentsX = this.parameters.widthSegments || 1;\n  const segmentsY = this.parameters.heightSegments || 1;\n  const indices = [];\n  for (let i = 0; i < segmentsY + 1; i += 1) {\n    let index11 = 0;\n    let index12 = 0;\n    for (let j = 0; j < segmentsX; j += 1) {\n      index11 = (segmentsX + 1) * i + j;\n      index12 = index11 + 1;\n      const index21 = index11;\n      const index22 = index11 + (segmentsX + 1);\n      indices.push(index11, index12);\n      if (index22 < ((segmentsX + 1) * (segmentsY + 1) - 1)) {\n        indices.push(index21, index22);\n      }\n    }\n    if ((index12 + segmentsX + 1) <= ((segmentsX + 1) * (segmentsY + 1) - 1)) {\n      indices.push(index12, index12 + segmentsX + 1);\n    }\n  }\n  this.setIndex(indices);\n  return this;\n};\n\nexport default class GlobeHome extends Component {\n  constructor() {\n    super();\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n    this.earth = null;\n    this.globe = new Group();\n    this.el = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      cameraTarget,\n      xrEnabled,\n    } = this.props;\n\n    this.scene = new Scene();\n    this.scene.fog = new Fog(Palette.bgHaze, 250 / 4, 250 / 2);\n\n    const pixelRatio = window.devicePixelRatio;\n\n    this.renderer = new WebGLRenderer({\n      antialias: true,\n    });\n\n    this.renderer.setClearColor(Palette.bgHaze, 1);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(pixelRatio);\n    this.el.current.appendChild(this.renderer.domElement);\n\n    if (xrEnabled) {\n      document.body.appendChild(VRButton.createButton(this.renderer));\n      this.renderer.xr.enabled = true;\n    }\n\n    this.renderer.shadowMap.enabled = true;\n\n    this.camera = new PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      250,\n    );\n\n    switch (cameraTarget) {\n      case 'side':\n        this.camera.position.x = -1.5;\n        this.camera.position.z = -5;\n        this.camera.lookAt(new Vector3(-1.5, 0, 0));\n        break;\n      default:\n        this.camera.position.x = 0;\n        this.camera.position.z = -10;\n        this.camera.lookAt(new Vector3(0, 0, 0));\n        break;\n    }\n\n    // Lights\n    const ambientLight = new AmbientLight(0xffffff, 0.5);\n    this.scene.add(ambientLight);\n\n    const sunlight = new DirectionalLight(0xffffff, 1);\n    sunlight.position.set(-10, 10, -10);\n    sunlight.castShadow = true;\n    this.scene.add(sunlight);\n\n    this.plane = new LineSegments(\n      new PlaneBufferGeometry(250, 250, 128, 128).toGrid(),\n      new MeshBasicMaterial({\n        color: 0xffffff,\n        // wireframe: true,\n        // wireframeLinewidth: 3,\n        opacity: 0.4,\n        transparent: true,\n      }),\n    );\n\n    this.scene.add(this.plane);\n    this.plane.position.y = -10;\n    this.plane.rotateX(MathUtils.degToRad(-90));\n\n    const speed = isMobile ? 0.024 : 0.012;\n\n    const render = (t) => {\n      const time = t / 2000;\n\n      this.plane.material.opacity = (Math.cos(time) / 10) + 0.25;\n\n      if (this.earth) {\n        this.globe.rotateY(MathUtils.degToRad(speed));\n      }\n\n      // controls.update();\n      // composer.render();\n      this.renderer.render(this.scene, this.camera);\n    };\n\n    this.renderer.setAnimationLoop(render);\n\n    // Mouse and resize events\n    const onWindowResize = () => {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { globe: globePrev } = prevProps;\n    const { globe } = this.props;\n\n    // If first instantiating the globe\n    if (globePrev === null && globe) {\n      this.earth = globe;\n\n      const params = {\n        x: 0.0001,\n        y: 0.0001,\n        z: 0.0001,\n      };\n\n      this.globe.scale.set(params.x, params.y, params.z);\n      this.globe.rotateY(MathUtils.degToRad(-125));\n      this.globe.add(this.earth);\n      this.scene.add(this.globe);\n\n      TweenAutoplay(true);\n\n      new Tween(params)\n        .to({\n          x: 1, y: 1, z: 1,\n        }, 750)\n        .easing(Easing.Quadratic.Out)\n        .on('update', ({\n          x, y, z,\n        }) => {\n          this.globe.scale.set(x, y, z);\n        })\n        .delay(500)\n        .start();\n    }\n  }\n\n  componentWillUnmount() {\n    this.renderer.setAnimationLoop(null);\n    this.renderer.domElement.remove();\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"three\" ref={this.el} />\n      </>\n    );\n  }\n}\n","import {\n  TOGGLE_INFO,\n  TOGGLE_CAMERA,\n  TOGGLE_SECTION,\n  SELECT_BIOME,\n  CLOSE_BIOME,\n  SET_MESSAGE,\n  CLOSE_MESSAGE,\n  PLACE_GLOBE,\n  RESET_GLOBE,\n  TAKE_PICTURE,\n  UPDATE_SECTION,\n  HELP_DISPLAYED,\n} from './actionTypes';\n\nexport const toggleInfo = () => ({\n  type: TOGGLE_INFO,\n});\n\nexport const toggleCamera = () => ({\n  type: TOGGLE_CAMERA,\n});\n\nexport const toggleSection = () => ({\n  type: TOGGLE_SECTION,\n});\n\nexport const selectBiome = (biome, section) => ({\n  type: SELECT_BIOME,\n  payload: {\n    biome,\n    section,\n  },\n});\n\nexport const closeBiome = () => ({\n  type: CLOSE_BIOME,\n});\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: {\n    message,\n  },\n});\n\nexport const closeMessage = (hide) => ({\n  type: CLOSE_MESSAGE,\n  payload: {\n    hide,\n  },\n});\n\nexport const placeGlobe = () => ({\n  type: PLACE_GLOBE,\n});\n\nexport const resetGlobe = () => ({\n  type: RESET_GLOBE,\n});\n\nexport const takePicture = () => ({\n  type: TAKE_PICTURE,\n});\n\nexport const updateSection = (degrees) => ({\n  type: UPDATE_SECTION,\n  payload: {\n    degrees,\n  },\n});\n\nexport const setHelpDisplayed = () => ({\n  type: HELP_DISPLAYED,\n});\n","import {\n  Vector3,\n  Mesh,\n  SphereBufferGeometry,\n  RingBufferGeometry,\n  MeshBasicMaterial,\n  LineBasicMaterial,\n  BufferGeometry,\n  Group,\n  Line,\n  TextureLoader,\n  SpriteMaterial,\n  Sprite,\n  DoubleSide,\n} from 'three';\nimport { PlainAnimator } from 'three-plain-animator/lib/plain-animator';\n\nimport Palette from '../../libs/Palette';\n\nconst CORE_RADIUS = 0.55;\n// const INNER_CORE_RADIUS = 1;\n// const MANTLE_RADIUS = 1.7;\nconst UPPER_MANTLE_RADIUS = 1.92;\nconst CRUST_RADIUS = 1.995;\n\nconst textureLoader = new TextureLoader();\n\nconst textures = {\n  core: textureLoader.load(`${process.env.PUBLIC_URL}/assets/textures/core/core-section.png`),\n};\n\nconst sprites = {\n  info: textureLoader.load(`${process.env.PUBLIC_URL}/assets/sprites/info-sprite-45f-7x7-2048.png`),\n  globe: textureLoader.load(`${process.env.PUBLIC_URL}/assets/sprites/globe-sprite-45f-7x7-2048.png`),\n};\n\nconst MeshHandler = {\n  createCore() {\n    // Add section meshes\n    const core = new Mesh(\n      new SphereBufferGeometry(CORE_RADIUS, 16, 16),\n      new MeshBasicMaterial({\n        color: Palette.core,\n      }),\n    );\n    core.name = 'core';\n    return core;\n  },\n  createSectionMesh() {\n    const section = new Group();\n\n    const inner = new Mesh(\n      new RingBufferGeometry(0, UPPER_MANTLE_RADIUS, 64, 1),\n      new MeshBasicMaterial({\n        color: 0xffffff,\n        side: DoubleSide,\n        map: textures.core,\n      }),\n    );\n    section.add(inner);\n\n    const crust = new Mesh(\n      new RingBufferGeometry(UPPER_MANTLE_RADIUS, CRUST_RADIUS, 64, 1),\n      new MeshBasicMaterial({\n        color: Palette.deepBlue,\n      }),\n    );\n    section.add(crust);\n\n    return section;\n  },\n  hotspotGeometry(coords, radMin, radMax, spriteTexture = 'info') {\n    const { lat, lon, component } = coords;\n\n    const hotspot = new Group();\n\n    const setPosition = (object, radius) => {\n      const latRad = lat * (Math.PI / 180);\n      const lonRad = -lon * (Math.PI / 180);\n\n      object.position.set(\n        Math.cos(latRad) * Math.cos(lonRad) * radius,\n        Math.sin(latRad) * radius,\n        Math.cos(latRad) * Math.sin(lonRad) * radius,\n      );\n      object.rotation.set(0.0, -lonRad, latRad - Math.PI * 0.5);\n    };\n\n    const pointCoord = (radius) => {\n      const latRad = lat * (Math.PI / 180);\n      const lonRad = -lon * (Math.PI / 180);\n\n      return new Vector3(\n        Math.cos(latRad) * Math.cos(lonRad) * radius,\n        Math.sin(latRad) * radius,\n        Math.cos(latRad) * Math.sin(lonRad) * radius,\n      );\n    };\n\n    const surfaceOrb = new Mesh(\n      new SphereBufferGeometry(0.01, 16, 16),\n      new MeshBasicMaterial({\n        color: Palette.green,\n        transparent: true,\n        opacity: 1,\n      }),\n    );\n\n    setPosition(surfaceOrb, radMin);\n    hotspot.add(surfaceOrb);\n\n    const points = [];\n    points.push(pointCoord(radMin));\n    points.push(pointCoord(radMax - 0.01));\n\n    const line = new Line(\n      new BufferGeometry().setFromPoints(points),\n      new LineBasicMaterial({\n        color: Palette.green,\n        transparent: true,\n        opacity: 1,\n      }),\n    );\n    hotspot.add(line);\n\n    const animator = new PlainAnimator(sprites[spriteTexture], 7, 7, 45, 30);\n\n    const texture = animator.init();\n\n    const sprite = new Sprite(\n      new SpriteMaterial({\n        map: texture,\n        transparent: true,\n        opacity: 1,\n      }),\n    );\n    sprite.name = 'hotspot-touch';\n    sprite.scale.set(0.18, 0.18, 1);\n    setPosition(sprite, radMax);\n    hotspot.add(sprite);\n\n    hotspot.name = 'hotspot';\n    hotspot.userData = {\n      type: 'hotspot',\n      lat,\n      lon,\n      component,\n      sprite,\n      animator,\n    };\n\n    return hotspot;\n  },\n};\n\nexport default MeshHandler;\n","import { Tween, Easing } from 'es6-tween';\n\nconst Utils = {\n  setOpacity(obj, opacity) {\n    obj.traverse((child) => {\n      if (child.material) {\n        const { material } = child;\n\n        material.transparent = true; // opacity < 1 || false;\n        material.opacity = opacity;\n      }\n    });\n  },\n\n  cloneMaterials(obj) {\n    obj.traverse((child) => {\n      if (child.material) {\n        const { material } = child;\n        // eslint-disable-next-line no-param-reassign\n        child.material = material.clone();\n      }\n    });\n  },\n\n  animateOpacity(obj, from, to) {\n    const o = obj;\n    const prop = {\n      opacity: from,\n    };\n\n    new Tween(prop)\n      .to({ opacity: to }, 750)\n      .easing(Easing.Quadratic.Out)\n      .on('update', ({ opacity }) => {\n        Utils.setOpacity(o, opacity);\n      })\n      .on('complete', () => {\n        if (to === 0) {\n          o.visible = false;\n        }\n      })\n      .start();\n  },\n\n  animateScale(obj, from, to, delay = 0) {\n    const o = obj;\n    const ease = to.y === 0 ? Easing.Quadratic.Out : Easing.Elastic.Out;\n\n    new Tween(from)\n      .to(to, 1750)\n      .easing(ease)\n      .on('start', () => {\n        if (from.y === 0) {\n          o.visible = true;\n        }\n      })\n      .on('update', ({ x, y, z }) => {\n        o.scale.set(x, y, z);\n      })\n      .on('complete', () => {\n        if (to.y === 0) {\n          o.visible = false;\n        }\n      })\n      .delay(delay)\n      .start();\n  },\n\n  shrub(obj, from, delay = 0) {\n    const o = obj;\n    const multiplier = Math.cos(Math.random() * Math.PI);\n    const variance = 0.3 * multiplier;\n\n    const prop = {\n      x: from.x + variance,\n      y: from.y + variance,\n      z: from.z + variance,\n    };\n\n    const forward = new Tween(from)\n      .to(prop, 2000)\n      .easing(Easing.Elastic.Out)\n      .on('update', ({ x, y, z }) => {\n        o.rotation.set(x, y, z);\n      })\n      .delay(delay);\n\n    new Tween(prop)\n      .to(from, 2000)\n      .easing(Easing.Elastic.Out)\n      .on('update', ({ x, y, z }) => {\n        o.rotation.set(x, y, z);\n      })\n      .chainedTweens(forward)\n      .delay(delay)\n      .start();\n  },\n};\n\nexport default Utils;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  WebGLRenderer,\n  Scene,\n  Camera,\n  Group,\n  Clock,\n  Raycaster,\n  Vector2,\n  Vector3,\n  Matrix4,\n  Plane,\n  Quaternion,\n  Euler,\n  MathUtils,\n  AudioListener,\n  Audio,\n  Mesh,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  DoubleSide,\n  AmbientLight,\n  PointLight,\n  RingBufferGeometry,\n  FrontSide,\n} from 'three';\n\nimport Hammer from 'hammerjs';\nimport ReactGA from 'react-ga';\n\nimport {\n  Easing,\n  Tween,\n  update as TweenUpdate,\n} from 'es6-tween';\nimport styled from 'styled-components';\n\nimport { getState } from '../redux/selectors';\nimport {\n  toggleSection,\n  selectBiome,\n  resetGlobe,\n  placeGlobe,\n  setMessage,\n  closeMessage,\n  setHelpDisplayed,\n} from '../redux/actions';\nimport Palette from '../libs/Palette';\nimport MeshHandler from './handlers/mesh';\nimport Utils from './handlers/utils';\n\nconst COORDS = [\n  {\n    lat: -28.24,\n    lon: -55,\n    component: 'TropicalRainforest',\n  },\n  {\n    lat: 15.62,\n    lon: -95.09,\n    component: 'TemperateRainforest',\n  },\n  {\n    lat: 23.52,\n    lon: 32.84,\n    component: 'Freshwater',\n  },\n  {\n    lat: 0.780288,\n    lon: -105.882064,\n    component: 'Chaparral',\n  },\n];\n\nconst INNER_COORDS = [\n  {\n    distance: 0.55,\n    component: 'InnerCore',\n  },\n  {\n    distance: 1.05,\n    component: 'OuterCore',\n  },\n  {\n    distance: 1.5,\n    component: 'Mantle',\n  },\n  {\n    distance: 1.98,\n    component: 'Crust',\n  },\n];\n\nconst GLOBE_Y_CENTER = 1;\nconst GLOBE_SCALE = 0.25;\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nclass GlobeAR extends Component {\n  constructor() {\n    super();\n    this.renderer = null;\n    this.scene = new Scene();\n    this.camera = new Camera();\n    this.controller = null;\n    this.listener = null;\n    this.audioInteraction = null;\n    this.audioBg = null;\n    this.fakeEarth = null;\n    this.earth = null;\n    this.biomes = null;\n    this.sunlight = null;\n    this.globe = new Group();\n    this.group = new Group();\n    this.hotspots = new Group();\n    this.innerHotspots = new Group();\n    this.clock = new Clock();\n    this.animations = {};\n    this.surface = null;\n    this.controls = null;\n    this.el = React.createRef();\n    this.image = false;\n    this.statePlace = true;\n    this.rotating = true;\n    this.screenshot = null;\n    this.mixer = null;\n    this.raycaster = new Raycaster();\n    this.tapPosition = new Vector2();\n    this.vec3 = new Vector3();\n    this.tempMatrix = new Matrix4();\n    this.helpTimeout = null;\n    this.theta = 0;\n    this.hitTestSource = null;\n    this.hitTestSourceRequested = false;\n\n    this.clipPlanes = [\n      new Plane(),\n      new Plane(),\n    ];\n\n    this.planeNormal = [\n      new Vector3(),\n      new Vector3(),\n    ];\n\n    this.planePoint = [\n      new Vector3(),\n      new Vector3(),\n    ];\n\n    this.axis = new Vector3(1, 0, 0);\n\n    this.sectionRotation = 0;\n\n    this.saved = {\n      rotation: null,\n      scale: 1,\n      touches: [],\n      vector: new Vector3(),\n    };\n\n    this.attachHandlers = () => {\n      const hammer = new Hammer(this.canvas);\n\n      hammer.on('tap', (e) => {\n        const { props } = this;\n        const { globe, store } = props;\n        const { app, ui } = store;\n\n        ReactGA.event({\n          category: 'ui',\n          action: 'interaction',\n          label: 'tap',\n        });\n\n        this.rotating = false;\n\n        if (app.globePlaced === false && this.group.visible === true) {\n          this.spawnEarth();\n\n          if (app.helpDisplayed === false) {\n            this.displayHelp();\n          } else {\n            props.closeMessage();\n          }\n          props.placeGlobe();\n        } else {\n          // If placed, raycast to entire globe group.\n          // Calculate tap position in normalized device coordinates (-1 to +1) for both components.\n          this.tapPosition.x = (e.center.x / window.innerWidth) * 2 - 1;\n          this.tapPosition.y = -(e.center.y / window.innerHeight) * 2 + 1;\n\n          // Update the picking ray with the camera and tap position.\n          this.raycaster.setFromCamera(this.tapPosition, this.xrCamera);\n\n          if (ui.biome === false && ui.section === false) {\n            const intersects = this.raycaster.intersectObjects([this.earth.children[0], this.hotspots], true);\n            if (intersects.length > 0\n              && (intersects[0].object.parent.name === 'hotspot')) {\n              const { userData } = intersects[0].object.parent;\n              const { component } = userData;\n\n              if (component === 'Section') {\n                props.toggleSection();\n              } else {\n                props.selectBiome(component);\n              }\n            }\n          } else if (ui.biome === false && ui.section === true) {\n            const intersects = this.raycaster.intersectObjects(this.innerHotspots.children, true);\n            if (intersects.length > 0\n              && intersects[0].object.parent.name === 'hotspot') {\n              const { userData } = intersects[0].object.parent;\n              const { component } = userData;\n\n              props.selectBiome(component, true);\n            }\n          } else {\n            if (ui.section === true) {\n              return;\n            }\n\n            // Stop audio if already playing\n            if (this.audioInteraction.isPlaying) {\n              this.audioInteraction.stop();\n            }\n            const name = app.biome.toLowerCase();\n\n            ReactGA.event({\n              category: 'app',\n              action: 'interaction',\n              label: name,\n            });\n\n            const { biomes, rotations, audioBuffers } = globe.userData;\n\n            // Play Shrub animations for forests\n            if (name === 'tropicalrainforest' || name === 'temperaterainforest') {\n              const { children = [] } = biomes[name];\n\n              children.forEach((obj) => {\n                if (/(tree|spruce|pine)/.test(obj.name)) {\n                  Utils.shrub(obj, rotations[obj.name]);\n                }\n              });\n            }\n\n            // Start audio if we have it\n            if (audioBuffers[`${name}-interaction`]) {\n              this.audioInteraction.setBuffer(audioBuffers[`${name}-interaction`]);\n              this.audioInteraction.play();\n            }\n\n            // Start animation\n            if (this.animations[name]) {\n              this.animations[name].reset().play();\n            }\n          }\n        }\n      });\n      hammer.get('pinch').set({ enable: true });\n      hammer.get('rotate').set({ enable: false });\n      hammer.get('pan').set({ enable: true, threshold: 5 });\n\n      hammer.on('pan', (e) => {\n        const { props } = this;\n        const { store } = props;\n        const { ui } = store;\n        if (ui.section === true) {\n          return;\n        }\n\n        const {\n          velocityX, velocityY, deltaX, deltaY,\n        } = e;\n        const { movementX, movementY } = e.srcEvent;\n        const delta = {\n          x: deltaX,\n          y: deltaY,\n        };\n\n        if (movementX && movementY) {\n          delta.x = (movementX / 15);\n          delta.y = (movementY / 15);\n        } else {\n          delta.x = (velocityX / 0.425);\n          delta.y = (velocityY / 0.425);\n        }\n\n        const deltaRotationQuaternion = new Quaternion()\n          .setFromEuler(new Euler(\n            MathUtils.degToRad(delta.y * 1),\n            MathUtils.degToRad(delta.x * 1),\n            0,\n            'XYZ',\n          ));\n\n        this.globe.quaternion.multiplyQuaternions(deltaRotationQuaternion, this.globe.quaternion);\n      });\n\n      hammer.on('pinchstart', (e) => {\n        const { scale } = e;\n        this.saved.scale = scale;\n      });\n\n      hammer.on('pinch', (e) => {\n        const { scale } = e;\n        const effective = scale - this.saved.scale;\n        const { x } = this.globe.scale;\n        const final = x + effective;\n        if (final > 3 || final < 0.1) {\n          return;\n        }\n\n        this.globe.scale.set(final, final, final);\n        this.earthSectionLeft.scale.set(final, final, final);\n        this.earthSectionRight.scale.set(final, final, final);\n        this.innerHotspots.scale.set(final, final, final);\n        this.saved.scale = scale;\n      });\n\n      hammer.on('panend', () => {\n        ReactGA.event({\n          category: 'ui',\n          action: 'interaction',\n          label: 'rotate',\n        });\n      });\n\n      hammer.on('pinchend', () => {\n        ReactGA.event({\n          category: 'ui',\n          action: 'interaction',\n          label: 'scale',\n        });\n      });\n    };\n\n    this.displayHelp = (index = 0) => {\n      const { props } = this;\n      const messages = [\n        'INSTRUCTIONS_SWIPE',\n        'INSTRUCTIONS_PINCH',\n        'INSTRUCTIONS_TAP',\n        'INSTRUCTIONS_ICON',\n      ];\n      const current = messages[index];\n      props.closeMessage(true);\n\n      this.helpTimeout = setTimeout(() => {\n        props.setMessage(current);\n\n        setTimeout(() => {\n          if (typeof messages[index + 1] !== 'undefined') {\n            this.displayHelp(index + 1);\n          } else {\n            props.closeMessage();\n            props.setHelpDisplayed();\n          }\n        }, 3000);\n      }, 350);\n    };\n\n    this.spawnEarth = () => {\n      const { x: gX, z: gZ } = this.group.position;\n      this.earthSectionLeft.position.set(gX, GLOBE_Y_CENTER, gZ);\n      this.earthSectionRight.position.set(gX, GLOBE_Y_CENTER, gZ);\n      this.innerHotspots.position.set(gX, GLOBE_Y_CENTER, gZ);\n\n      const scale = { x: 0.0001, y: 0.0001, z: 0.0001 };\n      this.globe.scale.set(0.0001, 0.0001, 0.0001);\n      this.globe.visible = true;\n\n      // Start autoupdating matrixes\n      this.group.position.setFromMatrixPosition(this.group.matrix);\n      this.group.matrixAutoUpdate = true;\n\n      // Force childs to be visible\n      this.earth.visible = true;\n      this.hotspots.visible = true;\n      this.ring.visible = false;\n      this.fakeEarth.visible = false;\n\n      this.group.rotation.y = this.camera.rotation.y;\n\n      new Tween(scale)\n        .to({ x: 1, y: 1, z: 1 }, 750)\n        .easing(Easing.Quadratic.Out)\n        .on('update', ({ x, y, z }) => { this.globe.scale.set(x, y, z); })\n        .on('complete', () => {\n          this.earthSectionLeft.scale.set(1, 1, 1);\n          this.earthSectionRight.scale.set(1, 1, 1);\n          this.innerHotspots.scale.set(1, 1, 1);\n        })\n        .start()\n        .delay(2000);\n\n      ReactGA.event({\n        category: 'app',\n        action: 'globe',\n        label: 'place',\n      });\n    };\n\n    this.updateSections = (degrees = 120, reset = false) => {\n      // Clamp it so we avoid overlapping the meshes;\n      const d = Math.min(180, Math.max(0, degrees));\n\n      const [planeLeft, planeRight] = this.clipPlanes;\n      const [normalLeft, normalRight] = this.planeNormal;\n      const [pointLeft, pointRight] = this.planePoint;\n\n      if (reset === true) {\n        this.earthSectionLeft.rotation.y = 0;\n        normalLeft.set(0, 0, -1).applyQuaternion(this.earthSectionLeft.quaternion);\n        pointLeft.copy(this.group.position);\n        planeLeft.setFromNormalAndCoplanarPoint(normalLeft, pointLeft);\n        this.innerHotspots.rotation.y = this.earthSectionLeft.rotation.y + MathUtils.degToRad(90);\n      }\n\n      this.earthSectionRight.rotation.y = MathUtils.degToRad(-180 + d);\n\n      normalRight.set(0, 0, -1).applyQuaternion(this.earthSectionRight.quaternion);\n      pointRight.copy(this.group.position);\n      planeRight.setFromNormalAndCoplanarPoint(normalRight, pointRight);\n    };\n\n    this.globePipelineModule = () => {\n      const placeObjectOnPlanet = (coords) => {\n        const sprite = coords.component === 'Section' ? 'globe' : 'info';\n        const hotspot = MeshHandler.hotspotGeometry(coords, 0.5, 1, sprite);\n        this.hotspots.add(hotspot);\n      };\n\n      const placeObjectInsidePlanet = (coords, index) => {\n        const { component, distance } = coords;\n        const hotspot = MeshHandler.hotspotGeometry(\n          {\n            lat: 85 - (index * 25),\n            lon: 2,\n            component,\n          }, distance, 1.5, 'info',\n        );\n        this.innerHotspots.add(hotspot);\n      };\n\n      const initXrScene = () => {\n        this.listener = new AudioListener();\n        this.camera.add(this.listener);\n\n        // create a global audio sources\n        this.audioInteraction = new Audio(this.listener);\n        this.audioBg = new Audio(this.listener);\n        this.scene.add(this.group);\n\n        // Surface invisible area\n        this.surface = new Mesh(\n          new PlaneGeometry(80, 80, 1, 1),\n          new MeshBasicMaterial({\n            color: 0xff00ff,\n            transparent: true,\n            opacity: 0,\n            side: DoubleSide,\n          }),\n        );\n\n        this.surface.rotateX(MathUtils.degToRad(-90));\n        this.surface.position.set(0, 0, 0);\n        this.surface.receiveShadow = true;\n\n        this.scene.add(this.surface);\n\n        // Ligths\n        this.scene.add(new AmbientLight(0xaaaaaa, 0.85));\n        this.sunlight = new PointLight(0xffffff, 1.5);\n        this.sunlight.position.set(0, GLOBE_Y_CENTER, 0);\n        this.scene.add(this.sunlight);\n\n        this.ring = new Mesh(\n          new RingBufferGeometry(0.15, 0.2, 32, 1).rotateX(-Math.PI / 2),\n          new MeshBasicMaterial({\n            color: Palette.lightGreen,\n            side: DoubleSide,\n          }),\n        );\n        this.group.matrixAutoUpdate = false;\n        this.group.add(this.ring);\n\n        COORDS.map((coord) => placeObjectOnPlanet(coord));\n        INNER_COORDS.map((coord, index) => placeObjectInsidePlanet(coord, index));\n        this.globe.add(this.hotspots);\n\n        // Section caps + hotspots\n        this.scene.add(this.earthSectionLeft);\n        this.scene.add(this.earthSectionRight);\n        this.scene.add(this.innerHotspots);\n\n        this.attachHandlers();\n      };\n\n      const updateGlobe = () => {\n        const { x, y, z } = this.xrCamera.position;\n\n        this.sunlight.position.set(x, y, z);\n\n        const delta = this.clock.getDelta();\n\n        if (this.mixer) {\n          this.mixer.update(delta);\n        }\n\n        if (this.globe && this.rotating === true) {\n          this.globe.rotateY(MathUtils.degToRad(0.118));\n        }\n      };\n\n      const animateHotspots = () => {\n        if (this.hotspots.children.length > 0) {\n          this.hotspots.children.map((hot) => {\n            const { animator } = hot.userData;\n            animator.animate();\n            return true;\n          });\n        }\n      };\n\n      // Mouse and resize events\n      const onWindowResize = () => {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n      };\n\n      this.renderer = new WebGLRenderer({\n        antialias: true,\n        alpha: true,\n        canvas: this.canvas,\n      });\n\n      // Enable XR AR\n      this.renderer.xr.enabled = true;\n      this.renderer.localClippingEnabled = false;\n\n\n      const { session } = this.props;\n\n      this.renderer.xr.setReferenceSpaceType('local');\n      this.renderer.xr.setSession(session);\n\n      this.xrCamera = this.renderer.xr.getCamera(this.camera);\n\n      initXrScene();\n      window.addEventListener('resize', onWindowResize, false);\n\n      const animate = () => {\n        this.renderer.setAnimationLoop((time, frame) => {\n          updateGlobe(time);\n          animateHotspots(time);\n          TweenUpdate(time);\n\n          const { props } = this;\n          const { store } = props;\n          const { app, ui } = store;\n          const { message } = ui;\n\n          if (frame && app.globePlaced === false) {\n            const referenceSpace = this.renderer.xr.getReferenceSpace();\n            const currentSession = this.renderer.xr.getSession();\n\n            if (this.hitTestSourceRequested === false) {\n              currentSession.requestReferenceSpace('viewer').then((ref) => {\n                currentSession.requestHitTestSource({ space: ref }).then((source) => {\n                  this.hitTestSource = source;\n                });\n              });\n\n              currentSession.addEventListener('end', () => {\n                this.hitTestSourceRequested = false;\n                this.hitTestSource = null;\n              });\n\n              this.hitTestSourceRequested = true;\n            }\n\n            if (this.hitTestSource) {\n              const hitTestResults = frame.getHitTestResults(this.hitTestSource);\n\n              if (hitTestResults.length) {\n                const hit = hitTestResults[0];\n\n                const { matrix } = hit.getPose(referenceSpace).transform;\n                this.group.matrix.fromArray(matrix);\n                this.group.visible = true;\n                if (message !== 'PLACE_GLOBE') {\n                  props.setMessage('PLACE_GLOBE');\n                }\n              } else {\n                this.group.visible = false;\n                if (message !== 'SCAN_FLOOR') {\n                  props.setMessage('SCAN_FLOOR');\n                }\n              }\n            }\n          }\n\n          this.renderer.render(this.scene, this.camera);\n        });\n      };\n\n      animate();\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview('/globe');\n    this.canvas = this.el.current;\n\n    const { globe } = this.props;\n\n    this.earth = globe;\n\n    this.fakeEarth = globe.clone();\n\n    this.fakeEarth.traverse((node) => {\n      const n = node;\n      if (n.isMesh) {\n        n.material = n.material.clone();\n        if (n.name === 'ocean') {\n          n.visible = false;\n        }\n      }\n    });\n\n    Utils.setOpacity(this.fakeEarth, 0.3);\n    this.fakeEarth.position.set(0, GLOBE_Y_CENTER, 0);\n    this.group.add(this.fakeEarth);\n\n    this.globe.add(this.earth);\n    this.globe.visible = false;\n\n    this.globe.position.set(0, GLOBE_Y_CENTER, 0);\n\n    this.earth.scale.set(GLOBE_SCALE, GLOBE_SCALE, GLOBE_SCALE);\n    this.fakeEarth.scale.set(GLOBE_SCALE, GLOBE_SCALE, GLOBE_SCALE);\n\n    // Add section meshes\n    this.earthCore = MeshHandler.createCore();\n    this.globe.add(this.earthCore);\n\n    // Need to be detached from the group otherwise reports odd rotation quatertions.\n    // Will add on init Scene and move it when spawnEarth is invoked\n    this.earthSectionLeft = MeshHandler.createSectionMesh();\n    this.earthSectionRight = MeshHandler.createSectionMesh();\n\n    this.earthSectionLeft.visible = false;\n    this.earthSectionRight.visible = false;\n    this.innerHotspots.visible = false;\n    this.earthCore.visible = false;\n\n    this.globe.rotateY(MathUtils.degToRad(-180));\n\n    this.group.add(this.globe);\n    this.globePipelineModule();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { props } = this;\n    const { globe, store } = props;\n    const { ui, app } = store;\n    const { ui: prevUi, app: prevApp } = prevProps.store;\n\n    // Hide Hotspot states\n    if (prevUi.hideHotspots === false && ui.hideHotspots === true) {\n      this.rotating = false;\n      Utils.animateOpacity(this.hotspots, 1, 0);\n    }\n\n    if (prevUi.hideHotspots === true && ui.hideHotspots === false) {\n      this.hotspots.visible = true;\n      Utils.animateOpacity(this.hotspots, 0, 1);\n    }\n\n    // Biomes states\n    if (prevUi.biome === false && ui.biome === true) {\n      ReactGA.event({\n        category: 'app',\n        action: 'biome',\n        label: app.biome,\n      });\n      ReactGA.pageview(`/globe/${app.biome.toLowerCase()}`);\n\n      if (this.helpTimeout) {\n        clearTimeout(this.helpTimeout);\n        props.closeMessage(true);\n        props.setHelpDisplayed();\n      }\n\n      const { biomes, scales } = globe.userData;\n      const { children = [] } = biomes[app.biome.toLowerCase()];\n\n      const bgAudio = globe.userData.audioBuffers[`${app.biome.toLowerCase()}-bg`];\n\n      if (bgAudio) {\n        this.audioBg.setBuffer(bgAudio);\n        this.audioBg.setLoop(true);\n        this.audioBg.play();\n      }\n\n      if (children.length === 0) {\n        return;\n      }\n\n      let delay = 0;\n\n      children.forEach((obj) => {\n        const { x, y, z } = scales[obj.name];\n        Utils.animateScale(obj, { x: 0, y: 0, z: 0 }, { x, y, z }, delay);\n\n        delay += 150;\n      });\n    }\n\n    if (prevUi.biome === true && ui.biome === false) {\n      const { biomes, scales } = globe.userData;\n      const { children = [] } = biomes[app.biome.toLowerCase()];\n\n      ReactGA.pageview('/globe');\n\n      if (this.audioInteraction.isPlaying) {\n        this.audioInteraction.stop();\n      }\n      if (this.audioBg.isPlaying) {\n        this.audioBg.stop();\n      }\n\n      if (children.length === 0) {\n        return;\n      }\n\n      let delay = 0;\n\n      children.forEach((obj) => {\n        const { x, y, z } = scales[obj.name];\n        Utils.animateScale(obj, { x, y, z }, { x: 0, y: 0, z: 0 }, delay);\n\n        delay += 120;\n      });\n    }\n\n    if (prevApp.section !== app.section) {\n      ReactGA.event({\n        category: 'app',\n        action: 'interaction',\n        label: 'section',\n      });\n\n      this.updateSections(app.section);\n    }\n\n    if (prevUi.picture === false && ui.picture === true) {\n      ReactGA.event({\n        category: 'app',\n        action: 'photo',\n        label: 'taken',\n      });\n\n      this.takeScreenshot();\n    }\n\n    if (prevApp.globePlaced === true && app.globePlaced === false) {\n      this.ring.visible = true;\n      this.fakeEarth.visible = true;\n      this.globe.visible = false;\n\n      this.group.matrixAutoUpdate = false;\n\n      // Reset positions\n      this.group.rotation.y = 0;\n      this.globe.rotation.z = 0;\n      this.globe.rotation.x = 0;\n\n      ReactGA.event({\n        category: 'app',\n        action: 'globe',\n        label: 'reset',\n      });\n    }\n\n    // Section triggers\n    // In\n    if (prevUi.section === false && ui.section === true) {\n      ReactGA.event({\n        category: 'app',\n        action: 'section',\n        label: 'open',\n      });\n      ReactGA.pageview('/globe/section');\n\n      if (this.helpTimeout) {\n        clearTimeout(this.helpTimeout);\n        props.closeMessage(true);\n        props.setHelpDisplayed();\n      }\n\n      this.updateSections(app.section, true);\n      this.renderer.localClippingEnabled = true;\n\n      this.earth.traverse((node) => {\n        const n = node;\n        if (n.isMesh) {\n          n.material.clippingPlanes = this.clipPlanes;\n          n.material.clipIntersection = true;\n          if (n.name === 'earth') {\n            n.material.side = DoubleSide;\n          }\n        }\n      });\n\n      this.earthSectionLeft.visible = true;\n      this.earthSectionRight.visible = true;\n      this.earthCore.visible = true;\n      this.innerHotspots.visible = true;\n    }\n\n    // Out\n    if (prevUi.section === true && ui.section === false) {\n      ReactGA.event({\n        category: 'app',\n        action: 'section',\n        label: 'close',\n      });\n      ReactGA.pageview('/globe');\n\n      this.renderer.localClippingEnabled = false;\n\n      this.earth.traverse((node) => {\n        const n = node;\n        if (n.isMesh) {\n          n.material.clippingPlanes = [];\n          n.material.clipIntersection = false;\n          if (n.name === 'earth') {\n            n.material.side = FrontSide;\n          }\n        }\n      });\n\n      this.earthSectionLeft.visible = false;\n      this.earthSectionRight.visible = false;\n      this.earthCore.visible = false;\n      this.innerHotspots.visible = false;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Canvas id=\"ar\" ref={this.el} />\n      </>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ store: getState(state) }),\n  {\n    toggleSection,\n    selectBiome,\n    resetGlobe,\n    placeGlobe,\n    setMessage,\n    closeMessage,\n    setHelpDisplayed,\n  },\n)(GlobeAR);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  FaInfo,\n  FaCaretLeft,\n  FaCaretDown,\n  FaCamera,\n  FaTimes,\n  FaGlobe,\n  FaQuestion,\n  FaCaretRight,\n  FaRegHandPointUp,\n  FaCompressArrowsAlt,\n} from 'react-icons/fa';\nimport {\n  IoIosWarning,\n  IoMdMove,\n} from 'react-icons/io';\nimport {\n  AiOutlineLoading3Quarters,\n} from 'react-icons/ai';\n\n\nexport default class Button extends Component {\n  constructor() {\n    super();\n\n    this.onClick = () => {\n      const { onClick } = this.props;\n      if (onClick) {\n        onClick();\n      }\n    };\n  }\n\n  render() {\n    const {\n      icon,\n      square,\n      big,\n      text,\n      disabled,\n    } = this.props;\n\n    let Size = big ? `\n      padding: 1.25rem;\n      font-size: 1.95rem;  \n      line-height: 0;\n    ` : `\n      padding: 0.75rem;\n      font-size: 1.55rem;  \n      line-height: 0;\n    `;\n\n    if (square) {\n      Size = `\n        padding: 1rem;\n        font-size: 1.2rem;\n        line-height: 1rem;  \n      `;\n    }\n\n\n    const greenButton = (icon === 'info' || icon === 'globe' || icon === 'tap');\n    const BaseButton = greenButton ? `\n      z-index: 1000;\n      position: relative;\n      background-color: transparent;\n      color: var(--sand);\n      cursor: pointer;\n      border-width: 0;\n      outline-width: 0;\n\n      &:active {\n        background-color: var(--green);\n      }\n\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        border-radius: 50%;\n      }\n      \n      &::before {\n        animation: buttonpulse 1500ms linear infinite;\n        z-index: 1;\n        border: 1rem solid var(--light-green);\n      }\n      &::after {\n        background-color: var(--green);\n        z-index: 2;\n      }\n      svg {\n        position: relative;\n        z-index: 3;\n      }\n    ` : `\n      z-index: 1000;\n      position: relative;\n      background-color: var(--deep-blue);\n      color: var(--sand);\n      cursor: pointer;\n      border-width: 0;\n      outline-width: 0;\n\n      &:active {\n        background-color: var(--blue);\n      }\n    `;\n\n    const FullButton = `\n      border-radius: ${square ? '0.25rem' : '50%'};\n      ${Size}\n      ${BaseButton}\n      opacity: ${icon === 'empty' ? '0' : '1'};\n      pointer-events: auto;\n    `;\n\n    const UIButton = disabled ? styled.div`${FullButton}` : styled.button`${FullButton}`;\n\n    const ComponentMap = {\n      info: FaInfo,\n      back: FaCaretLeft,\n      reset: FaCaretDown,\n      camera: FaCamera,\n      close: FaTimes,\n      globe: FaGlobe,\n      help: FaQuestion,\n      play: FaCaretRight,\n      unknown: IoIosWarning,\n      spinner: AiOutlineLoading3Quarters,\n      tap: FaRegHandPointUp,\n      move: IoMdMove,\n      pinch: FaCompressArrowsAlt,\n    };\n\n    const IconComponent = ComponentMap[icon] || ComponentMap.unknown;\n    const className = icon === 'spinner' ? 'fa-spin' : '';\n\n    return (\n      <>\n        <UIButton\n          onClick={disabled ? null : this.onClick}\n          type={disabled ? '' : 'button'}\n        >\n          {icon ? <IconComponent className={className} /> : null}\n          {text ? <span>{text}</span> : null}\n        </UIButton>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nconst Inline = styled.img`\n  width: auto;\n  height: 2rem;\n`;\n\nexport default class Logo extends Component {\n  constructor() {\n    super();\n\n    this.onClick = () => {\n      const { onClick } = this.props;\n      if (onClick) {\n        onClick();\n      }\n    };\n  }\n\n  render() {\n    const { inline } = this.props;\n\n    return (\n      <>\n        {inline ? <Inline src={`${process.env.PUBLIC_URL}/assets/images/logo-inline.png`} alt=\"AR Earth Day 2020\" /> : <Image src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} alt=\"AR Earth Day 2020\" />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Button from './Button';\nimport Logo from './Logo';\n\nconst baseStyles = `\n  z-index: 1000;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  position: fixed;\n  left: 0;\n  width: 100vw;\n  margin: auto;\n  padding: 2rem;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TopContainer = styled.div`\n  top: 50%;\n  ${baseStyles}\n  transform: translateY(-50%);\n  transition: top 1500ms ease-in-out, transform 1500ms ease-in-out;\n\n  &.loaded {\n    transform: translateY(0);\n    top: 0;\n  }\n`;\n\nconst MiddleContainer = styled.div`\n  bottom: 6rem;\n  ${baseStyles}\n  opacity: 1;\n  transition: opacity 900ms linear;\n\n  &.loaded {\n    opacity: 0;\n  }\n\n  img {\n    max-height: 2rem;\n    width: auto;\n    margin: 0 0.5rem;\n  }\n`;\n\nconst BottomContainer = styled.div`\n  bottom: 0;\n  ${baseStyles}\n  flex-direction: column;\n\n  & p {\n  }\n`;\n\nconst LogoContainer = styled.div`\n  max-width: 240px;\n`;\n\nconst Loading = (props) => {\n  const { load, onClickPlay, compatible } = props;\n\n  return (\n    <>\n      <TopContainer className={load ? 'loading' : 'loaded'}>\n        <LogoContainer>\n          <Logo />\n        </LogoContainer>\n      </TopContainer>\n\n      <MiddleContainer className={load ? 'loading' : 'loaded'}>\n        <a\n          rel=\"nofollow noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://threejs.org\"\n        >\n          <img\n            alt=\"Powered by ThreeJS\"\n            src={`${process.env.PUBLIC_URL}/assets/images/threejs.svg`}\n          />\n        </a>\n\n        <a\n          rel=\"nofollow noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://immersive-web.github.io/webxr-samples/\"\n        >\n          <img\n            alt=\"Powered by WebXR\"\n            src={`${process.env.PUBLIC_URL}/assets/images/webxr-logo.svg`}\n          />\n        </a>\n      </MiddleContainer>\n\n      <BottomContainer>\n        {load && <Button square text=\"Loading assets\" />}\n        {(!load && compatible) && <Button square text=\"Start AR\" onClick={() => { if (onClickPlay) onClickPlay(); }} />}\n        {(!load && !compatible) && (\n          <>\n            <p>\n              The WebXR feature is not supported on your browser or device, for example iOS device.\n            </p>\n            <p>\n              Make sure you&apos;re running at least Chrome 81 on an AR-compliant device (Android)\n              or the Apple Vision Pro virtual reality headset.\n            </p>\n          </>\n        )}\n      </BottomContainer>\n    </>\n  );\n};\n\nexport default Loading;\n","/* eslint-disable object-curly-spacing */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\nimport { closeBiome } from '../redux/actions';\n\nconst Container = styled.div`\n  position: fixed;\n  z-index: 1010;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  pointer-events: none;\n`;\n\nconst Slider = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  padding: 1rem;\n  justify-content: flex-end;\n  align-items: flex-start;\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4) 15%, rgba(0, 0, 0, 0.8) 100%);\n  pointer-events: auto;\n\n  h1, h2, h4 {\n    margin: 0;\n  }\n`;\n\n\nconst MainTitle = styled.h1`\n  vertical-align: middle;\n`;\n\nconst MainDescription = styled.h4`\n  vertical-align: middle;\n  font-size: 1.05em;\n\n  button {\n    vertical-align: middle;\n    margin-right: 0.35rem;\n    font-size: 0.95em;\n    padding: 0.4em;\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  width: 100%;\n  margin-top: 0.8rem;\n  margin-bottom: 0.8rem;\n\n  &.center {\n    align-items: center;\n    justify-content: center;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .fact {\n    font-size: 2.15rem;\n    font-weight: 400;\n    line-height: 1.15;\n    margin-top: 0.25rem;\n    margin-bottom: 0.25rem;\n\n    b {\n      color: var(--fact);\n    }\n  }\n`;\n\nconst BIOMES = {\n  Ocean: {\n    interactive: true,\n    title: 'Atlantic Ocean',\n    subtitle: 'Ocean Facts:',\n    description: 'The largest and most diverse biome in the world is largely affected by trash buildup. Make sure you are taking steps to recycle your waste!',\n    facts: [\n      {\n        title: 'Over <b>90%</b>',\n        description: 'of the life on Earth lives in the oceans',\n      },\n      {\n        title: '<b>12,400</b> feet',\n        description: 'The average depth of the ocean is 12,400 ft or about 2.35 miles!',\n      },\n    ],\n  },\n  TropicalRainforest: {\n    interactive: true,\n    title: 'The Amazon Forest',\n    subtitle: 'Tropical Rainforest Facts:',\n    description: 'Tropical rainforests are important because they provide oxygen, take in carbon dioxide, and are a huge source of biodiversity and cultural diversity. Be conscious of the amount of paper you use each day to help reduce the levels of deforestation!',\n    facts: [\n\n      {\n        title: 'The <b>Amazon</b>',\n        description: 'is the largest Tropical Rainforest',\n      },\n      {\n        title: '<b>50</b>% of flora and fauna',\n        description: 'Only covers 2% of Earth’s surface, but contains 50% of its plants and land animals',\n      },\n    ],\n  },\n  TemperateRainforest: {\n    interactive: true,\n    title: 'US National Forests',\n    subtitle: 'Temperate Rainforest Facts:',\n    description: 'Characterized by vast amounts of rainforests and cooler temperatures than Tropical Rainforests. These forests and others have been receding from deforestation, get your friends and family together and go plant trees to help grow the forests back!',\n    facts: [\n      {\n        title: '<b>90,000</b> acorns',\n        description: 'A single oak tree in this forest can produce 90,000 acorns each year!',\n      },\n      {\n        title: '<b>Sharp</b> claws',\n        description: 'Many animals in these forests have sharp claws for climbing trees',\n      },\n    ],\n  },\n  Freshwater: {\n    interactive: true,\n    title: 'The Nile',\n    subtitle: 'Freshwater Facts:',\n    description: 'This biome consists of lakes, ponds, streams and rivers that have less than 1% of salt content. Make sure you use safe green approved pesticides and fertilizer in your gardens to help stop dangerous runoff!',\n    facts: [\n      {\n        title: '<b>4,132</b> miles',\n        description: 'The Nile is the longest freshwater river biome',\n      },\n      {\n        title: '<b>3</b> groups',\n        description: 'There are 3 groups of Freshwater biomes: lakes and ponds, streams and rivers, and wetlands',\n      },\n    ],\n  },\n  Chaparral: {\n    interactive: true,\n    title: 'Southern California',\n    subtitle: 'Chaparral Facts:',\n    description: 'Chaparral biomes help protect the dry land from eroding from wind and rain. One way to protect this biome is to take extra steps to make sure you are safe from starting a fire as these areas are prone to wildfires.',\n    facts: [\n      {\n        title: '<b>Fire!</b>',\n        description: 'Some plants in this biome have adapted to the fires, their seeds lay dormant until they are touched by fire!',\n      },\n      {\n        title: '<b>30</b>℉ - <b>100</b>℉',\n        description: 'During winter temperatures can get as low as 30 degrees F in the summer it can get up to 100 degrees F!',\n      },\n    ],\n  },\n  InnerCore: {\n    title: 'Inner Core',\n    subtitle: 'About 70% of the moon size',\n    description: 'Only discovered to be a hard solid ball in 1936, is believed to be just as hot as the sun\\'s surface.',\n    facts: [\n      {\n        title: '<b>760</b> miles',\n        description: 'is the diameter of the inner core',\n      },\n    ],\n  },\n  OuterCore: {\n    title: 'Outer Core',\n    subtitle: 'The only liquid layer',\n    description: 'The outer core is responsible for Earth\\'s magnetic field. As Earth spins on its axis, the iron inside the liquid outer core moves around',\n    facts: [\n      {\n        title: 'Liquid <b>iron</b>',\n        description: 'The outer core is so hot that the iron inside it is permanently liquid',\n      },\n    ],\n  },\n  Mantle: {\n    title: 'Mantle',\n    subtitle: 'Makes up about 84% of Earth\\'s volume.',\n    description: 'The entire mantle is about 1800 miles thick, which means the lower mantle makes up the bulk of this part of the Earth. The temperature of the mantle near the crust ranges from 900 to 1600 degrees Fahrenheit',\n    facts: [\n      {\n        title: '<b>5400</b>℉',\n        description: 'The average temperature of the Mantle',\n      },\n    ],\n  },\n  Crust: {\n    title: 'Crust',\n    subtitle: 'Relatively thin and rocky',\n    description: 'The Earth\\'s lithosphere is the rigid outer layer that is made up of the crust and the part of the mantle just below it.',\n    facts: [\n      {\n        title: 'Only <b>2</b> miles',\n        description: 'That is the thickness the crust can reach under the oceans',\n      },\n    ],\n  },\n};\n\nclass Biome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false,\n    };\n\n    this.toggleShow = () => {\n      const { show } = this.state;\n      this.setState({\n        show: !show,\n      });\n    };\n  }\n\n  render() {\n    const { props, state } = this;\n    const { biome } = props;\n    const b = BIOMES[biome];\n    const { show } = state;\n\n    return (\n      <Container>\n        <Slider\n          className={`peek-down ${show ? 'show-full' : 'show-partial'}`}\n          onClick={this.toggleShow}\n        >\n          <MainTitle>\n            {b.title}\n          </MainTitle>\n          <MainDescription>\n            {!show ? <Button icon=\"tap\" /> : null}\n            {!show ? <span>Tap here to show some facts</span> : b.subtitle}\n          </MainDescription>\n          {\n            b.facts.map((fact, index) => {\n              const { title, description } = fact;\n              const key = `biome-fact-${index}`;\n\n              return (\n                <List key={key}>\n                  <h1\n                    className=\"fact\"\n                    // eslint-disable-next-line react/no-danger\n                    dangerouslySetInnerHTML={{__html: title}}\n                  />\n                  <p>{description}</p>\n                </List>\n              );\n            })\n          }\n          <List key=\"biome-description\">\n            <p>{b.description}</p>\n          </List>\n          {\n            b.interactive\n              ? (\n                <List key=\"biome-button\" className=\"center\">\n                  <Button icon=\"tap\" onClick={this.toggleShow} />\n                  <span>You can tap on the biome to interact with it</span>\n                </List>\n              ) : null\n          }\n        </Slider>\n      </Container>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    closeBiome,\n  },\n)(Biome);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\nimport { toggleInfo } from '../redux/actions';\n\n\nconst Container = styled.div`\n  z-index: 1010;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: auto;\n  padding: 1rem;\n  justify-content: flex-end;\n  align-items: flex-start;\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4) 15%, rgba(0, 0, 0, 0.8) 100%);\n\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 999;\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  margin-top: 0.4rem;\n  margin-bottom: 0.4rem;\n\n  &.center {\n    justify-content: center;\n  }\n\n  div + p {\n    padding-left: 1rem;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nconst legend = [\n  {\n    icon: 'info',\n    title: 'Point of interest',\n    description: 'Tap on the pulsating icon to explore more.',\n  },\n  // {\n  //   icon: 'camera',\n  //   title: 'Camera mode',\n  //   description: 'Take a picture and share with your friends.',\n  // },\n  // {\n  //   icon: 'globe',\n  //   title: 'Cross-Section',\n  //   description: 'Explore the Earth\\'s inner core with this tool.',\n  // },\n  {\n    icon: 'reset',\n    title: 'Replace Earth',\n    description: 'If you moved too far away you can reposition the planet by pressing this button.',\n  },\n];\n\nconst InfoOverlay = (props) => (\n  <>\n    <Container>\n      <h1>Exploring AR Earth Day 2020</h1>\n      {\n        legend.map((item) => {\n          const { icon, title, description } = item;\n          const key = `info-${icon}`;\n\n          return (\n            <List key={key}>\n              <Button disabled icon={icon} />\n              <p>\n                <strong>{title}</strong>\n                <br />\n                {description}\n              </p>\n            </List>\n          );\n        })\n      }\n      <List key=\"info-button\" className=\"center\">\n        <Button square text=\"Got it!\" onClick={() => props.toggleInfo()} />\n      </List>\n    </Container>\n  </>\n);\n\nexport default connect(\n  null,\n  {\n    toggleInfo,\n  },\n)(InfoOverlay);\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable object-curly-spacing */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport ReactSlider from 'react-slider';\n\nimport Button from './Button';\n\nimport { getState } from '../redux/selectors';\nimport { toggleSection, updateSection } from '../redux/actions';\n\nconst Container = styled.div`\n  z-index: 1010;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: auto;\n  padding: 1rem;\n  justify-content: flex-end;\n  align-items: flex-start;\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4) 15%, rgba(0, 0, 0, 0.8) 100%);  \n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  width: 100%;\n  margin-top: 0.8rem;\n  margin-bottom: 0.8rem;\n\n  &.center {\n    align-items: center;\n    justify-content: center;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n`;\n\nconst StyledSlider = styled(ReactSlider)`\n  width: 100%;\n  height: 0.5rem;\n`;\n\nconst StyledThumb = styled.div`\n  height: 1.5rem;\n  line-height: 1.5rem;\n  width: 1.5rem;\n  text-align: center;\n  background-color: var(--blue);\n  color: white;\n  border-radius: 50%;\n  cursor: grab;\n  transform: translateY(-0.5rem);\n  position: relative;\n  outline: none;\n\n  span {\n    position: absolute;\n    bottom: calc(100% + 10px);\n    background-color: var(--deep-blue);\n    color: white;\n    border-radius: 0.15rem;\n    font-size: 0.75rem;\n    line-height: 0.75rem;\n    padding: 0.5rem;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 3;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 0;\n      width: 0;\n      border: 4px transparent solid;\n      border-top-color: var(--deep-blue);\n      bottom: -8px;\n      left: 50%;\n      transform: translateX(-50%);      \n    }\n  }\n`;\n\nconst StyledTrack = styled.div`\n  top: 0;\n  bottom: 0;\n  background: var(--deep-blue);\n  border-radius: 0.25rem;\n`;\n\nconst Thumb = (props, state) => (<StyledThumb {...props}><span>{`${(state.valueNow * (180 / 100)).toFixed(0)}\\u00b0`}</span></StyledThumb>);\nconst Track = (props, state) => (<StyledTrack {...props} index={state.index} />);\n\nconst SectionControls = (props) => {\n  const { store } = props;\n  const { app } = store;\n\n  return (\n    <>\n      <Container>\n        <List key=\"section-slider\">\n          <StyledSlider\n            defaultValue={(app.section / 180) * 100}\n            ariaLabel=\"Angle section\"\n            renderTrack={Track}\n            renderThumb={Thumb}\n            onChange={(value) => {\n              const degrees = (value * (180 / 100)).toFixed(0);\n              props.updateSection(degrees);\n            }}\n          />\n        </List>\n        <List key=\"section-button\" className=\"center\">\n          <Button icon=\"close\" onClick={() => props.toggleSection()} />\n        </List>\n      </Container>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({ store: getState(state) }),\n  {\n    toggleSection,\n    updateSection,\n  },\n)(SectionControls);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { getState } from '../redux/selectors';\nimport {\n  toggleCamera,\n  toggleSection,\n  toggleInfo,\n  closeBiome,\n  resetGlobe,\n} from '../redux/actions';\n\n\nimport Biome from './Biome';\nimport InfoOverlay from './InfoOverlay';\n\nimport Button from './Button';\nimport Logo from './Logo';\nimport SectionControls from './SectionControls';\n\nconst baseStyles = `\n  z-index: 1001;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  position: fixed;\n  left: 0;\n  width: 100%;\n  padding: 1rem;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TopContainer = styled.div`\n  top: 0;\n  ${baseStyles}\n  pointer-events: none;\n`;\n\nconst BottomContainer = styled.div`\n  bottom: 0;\n  ${baseStyles}\n\n  p {\n    width: 100%;\n    text-align: center;\n    font-size: 1.3rem;\n\n    button {\n      vertical-align: middle;\n      margin: 0 0.5rem;\n    }\n  }\n`;\n\nconst BottomFade = styled.div`\n  bottom: 0;\n  ${baseStyles}\n  z-index: 1000;\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.7) 100%);\n  height: 5rem;\n  pointer-events: none;\n`;\n\nconst STRINGS = {\n  CAMERA_ACCESS_REQUIRED: 'To continue with the AR experience we need to access to your camera',\n  CAMERA_ACCESS_DENIED: 'We can\\'t offer an AR experience without camera permissions',\n  SCAN_FLOOR: 'Move your phone to scan a well lit and flat surface',\n  PLACE_GLOBE: 'Tap on the screen to spawn the 3D earth',\n  INSTRUCTIONS_SWIPE: (\n    <>\n      <Button icon=\"move\" />\n      <span>Swipe to spin the globe</span>\n    </>\n  ),\n  INSTRUCTIONS_PINCH: (\n    <>\n      <Button icon=\"pinch\" />\n      <span>Pinch to zoom in and out</span>\n    </>\n  ),\n  INSTRUCTIONS_TAP: (\n    <>\n      <Button icon=\"tap\" />\n      <span>Tap on biomes to interact and titles to find out more</span>\n    </>\n  ),\n  INSTRUCTIONS_ICON: (\n    <>\n      <span>Tap on </span>\n      <Button icon=\"info\" />\n      <span> to explore</span>\n    </>\n  ),\n};\n\nconst Interface = (props) => {\n  const { store } = props;\n\n  return (\n    <div id=\"interface\">\n      <TopContainer>\n        <CSSTransition\n          in={!store.ui.picture}\n          classNames=\"slide-up\"\n          timeout={300}\n          unmountOnExit\n          appear\n        >\n          <Logo inline />\n        </CSSTransition>\n        <CSSTransition\n          in={!store.ui.hide || store.ui.biome}\n          classNames=\"slide-up\"\n          timeout={300}\n          appear\n        >\n          <div>\n            {\n              store.ui.biome\n                ? <Button icon=\"close\" onClick={() => props.closeBiome()} />\n                : <Button icon=\"help\" onClick={() => props.toggleInfo()} />\n            }\n          </div>\n        </CSSTransition>\n      </TopContainer>\n\n      <CSSTransition\n        in={!store.ui.hide && !store.ui.biome}\n        classNames=\"slide-down\"\n        timeout={300}\n        unmountOnExit\n        appear\n      >\n        <BottomContainer>\n          <Button icon=\"reset\" onClick={() => props.resetGlobe()} />\n        </BottomContainer>\n      </CSSTransition>\n\n      <CSSTransition\n        in={store.ui.section && !store.ui.biome}\n        classNames=\"slide-down\"\n        timeout={300}\n        unmountOnExit\n        appear\n      >\n        <BottomContainer>\n          <SectionControls />\n        </BottomContainer>\n      </CSSTransition>\n\n      <CSSTransition\n        in={store.ui.info}\n        classNames=\"slide-down\"\n        timeout={300}\n        unmountOnExit\n        appear\n      >\n        <InfoOverlay />\n      </CSSTransition>\n\n      <CSSTransition\n        in={store.ui.biome}\n        classNames=\"slide-down\"\n        timeout={300}\n        unmountOnExit\n        appear\n      >\n        <Biome biome={store.app.biome} />\n      </CSSTransition>\n\n      <CSSTransition\n        in={store.ui.message}\n        classNames=\"slide-down\"\n        timeout={300}\n        unmountOnExit\n        appear\n      >\n        <BottomContainer>\n          <p>{STRINGS[store.app.message]}</p>\n        </BottomContainer>\n      </CSSTransition>\n\n      <BottomFade />\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({ store: getState(state) }),\n  {\n    toggleInfo,\n    toggleCamera,\n    toggleSection,\n    closeBiome,\n    resetGlobe,\n  },\n)(Interface);\n","import React, { Component } from 'react';\nimport {\n  AudioLoader,\n} from 'three';\nimport ReactGA from 'react-ga';\n\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\n\nimport GlobeHome from './GlobeHome';\nimport GlobeAR from './GlobeAR';\nimport Loading from './Loading';\nimport Interface from './Interface';\n\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      compatible: true,\n      model: null,\n      playing: false,\n      session: null,\n    };\n\n    this.startExperience = () => {\n      const { compatible } = this.state;\n\n      const options = {\n        requiredFeatures: [\n          'hit-test',\n          'dom-overlay',\n        ],\n        domOverlay: {\n          root: document.querySelector('#root'),\n        },\n      };\n\n      if (compatible) {\n        navigator.xr.requestSession('immersive-ar', options).then((session) => {\n          ReactGA.event({\n            category: 'app',\n            action: 'experience',\n            label: 'session start',\n          });\n\n          this.setState({\n            playing: true,\n            session,\n          });\n        });\n      } else {\n        this.setState({\n          playing: true,\n          session: false,\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    const load = () => {\n      const loader = new GLTFLoader();\n      const loaderError = (err) => {\n        // eslint-disable-next-line no-console\n        window.console.warn(err);\n\n        this.setState({\n          loading: false,\n        });\n      };\n\n      const dracoLoader = new DRACOLoader();\n      dracoLoader.setDecoderPath(`${process.env.PUBLIC_URL}/draco/gltf/`);\n      dracoLoader.preload();\n\n      loader.setDRACOLoader(dracoLoader);\n\n      const files = {\n        globe: `${process.env.PUBLIC_URL}/assets/models/globe.glb`,\n        audios: [\n          'temperaterainforest-bg',\n          'temperaterainforest-interaction',\n          'freshwater-bg',\n          'freshwater-interaction',\n          'tropicalrainforest-bg',\n          'tropicalrainforest-interaction',\n          'chaparral-bg',\n          'chaparral-interaction',\n        ],\n      };\n      const audioBuffers = {};\n\n      loader.load(files.globe, (globeglb) => {\n        // Extrapolate object group\n        ReactGA.event({\n          category: 'loaders',\n          action: 'model_loaded',\n          label: 'earth',\n          nonInteractive: true,\n        });\n\n        const { scene } = globeglb;\n        const [\n          temperaterainforest,\n          freshwater,\n          tropicalrainforest,\n          chaparral,\n        ] = scene.children;\n\n        const biomes = {\n          temperaterainforest,\n          tropicalrainforest,\n          chaparral,\n          freshwater,\n        };\n\n        ReactGA.event({\n          category: 'loaders',\n          action: 'model_loaded',\n          label: 'biomes',\n          nonInteractive: true,\n        });\n\n        const scales = {};\n        const rotations = {};\n\n        Object.keys(biomes).forEach((key) => {\n          const biome = biomes[key];\n          biome.children.forEach((obj) => {\n            // Fast copies\n            const { x: xS, y: yS, z: zS } = obj.scale;\n            scales[obj.name] = JSON.parse(JSON.stringify({ x: xS, y: yS, z: zS }));\n\n            const { x: xR, y: yR, z: zR } = obj.rotation;\n            rotations[obj.name] = JSON.parse(JSON.stringify({ x: xR, y: yR, z: zR }));\n\n            obj.scale.set(0.0000001, 0.0000001, 0.0000001);\n            // eslint-disable-next-line no-param-reassign\n            obj.visible = false;\n          });\n        });\n\n        this.setState({\n          model: scene,\n        });\n\n        const { compatible } = this.state;\n        if (compatible) {\n          const audioLoader = new AudioLoader();\n\n          files.audios.forEach((file) => {\n            audioLoader.load(`${process.env.PUBLIC_URL}/assets/sounds/${file}.mp3`, (buffer) => {\n              audioBuffers[file] = buffer;\n\n              ReactGA.event({\n                category: 'loaders',\n                action: 'audio_loaded',\n                label: file,\n                nonInteractive: true,\n              });\n            });\n          });\n        }\n\n        scene.userData = {\n          biomes,\n          scales,\n          rotations,\n          audioBuffers,\n        };\n\n        this.setState({\n          loading: false,\n        });\n      }, null, loaderError);\n    };\n\n    const setCompatibilityAndLoad = (compatible) => {\n      this.setState({\n        compatible,\n      });\n\n      load();\n    };\n\n    const notCompatible = (err) => {\n      window.console.warn(err);\n\n      setCompatibilityAndLoad(false);\n    };\n\n    window.onload = () => {\n      // eslint-disable-next-line no-console\n      if (typeof navigator.xr !== 'undefined' && navigator.xr.isSessionSupported) {\n        navigator.xr.isSessionSupported('immersive-ar').then((supported) => {\n          if (supported) {\n            setCompatibilityAndLoad(true);\n          } else {\n            notCompatible('XR exists but immersive AR is not supported');\n          }\n        }).catch(notCompatible);\n      } else {\n        notCompatible('XR does not exist');\n      }\n    };\n  }\n\n  render() {\n    const {\n      model,\n      loading,\n      playing,\n      compatible,\n      session,\n    } = this.state;\n\n    if (playing) {\n      return (\n        <>\n          <GlobeAR globe={model} session={session} />\n          <Interface />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <GlobeHome globe={model} />\n        <Loading load={loading} compatible={compatible} onClickPlay={this.startExperience} />\n      </>\n    );\n  }\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React, { Component } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport ReactGA from 'react-ga';\n\nimport Renderer from './components/Renderer';\n\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    ReactGA.initialize('UA-172483840-2');\n\n    return (\n      <div className=\"App\">\n        <Renderer />\n      </div>\n    );\n  }\n}\n\nexport default process.env.NODE_ENV === 'development' ? hot(App) : App;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}